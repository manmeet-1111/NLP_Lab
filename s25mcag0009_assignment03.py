# -*- coding: utf-8 -*-
"""S25MCAG0009_assignment03.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ltJa4ycOOEH8nar2I2w1IyOY8534FGu2
"""

#1.Load and tokenize text
import nltk

nltk.download('brown')
nltk.download('punkt')
nltk.download('wordnet')
nltk.download('omw-1.4')
nltk.download('punkt_tab')

from nltk.corpus import brown
from nltk.tokenize import word_tokenize

text = " ".join(brown.words(categories='news'))

tokens = word_tokenize(text)

print("Sample Tokens:", tokens[:30])
print("Total Tokens:", len(tokens))

# 2.Visualize raw work frequencies
import matplotlib.pyplot as plt
from nltk import FreqDist
from wordcloud import WordCloud

fdist = FreqDist(tokens)

top_words = fdist.most_common(20)
print("Top 20 words:", top_words)

words, counts = zip(*top_words)
plt.figure(figsize=(10,5))
plt.bar(words, counts)
plt.title("Top 20 Frequent Words (Brown Corpus - News)")
plt.xticks(rotation=45)
plt.show()

wordcloud = WordCloud(width=800, height=400, background_color='white').generate_from_frequencies(fdist)
plt.figure(figsize=(10,5))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")
plt.show()

#3. Apply Stemming (PorterStemmer)
from nltk.stem import PorterStemmer

stemmer = PorterStemmer()
stems = [stemmer.stem(w) for w in tokens]

fdist_stems = FreqDist(stems)
print("Sample Stemmed Words:", stems[:30])
print("Top 15 Stems:", fdist_stems.most_common(15))

#4. Apply Lemmatization (WordNetLemmatizer)
from nltk.stem import WordNetLemmatizer

lemmatizer = WordNetLemmatizer()
lemmas = [lemmatizer.lemmatize(w) for w in tokens]

fdist_lemmas = FreqDist(lemmas)
print("Sample Lemmatized Words:", lemmas[:30])
print("Top 15 Lemmas:", fdist_lemmas.most_common(15))

#5. Compare Stemming vs Lemmatization
import pandas as pd

words_to_compare = [w for w, _ in fdist.most_common(50)][:15]

data = {
    "Word": words_to_compare,
    "Stemmed": [stemmer.stem(w) for w in words_to_compare],
    "Lemmatized": [lemmatizer.lemmatize(w) for w in words_to_compare]
}

df = pd.DataFrame(data)
print(df)

plt.figure(figsize=(12,6))
plt.bar(df["Word"], df.index, label="Original", alpha=0.5)
plt.bar(df["Stemmed"], df.index, label="Stemmed", alpha=0.5)
plt.bar(df["Lemmatized"], df.index, label="Lemmatized", alpha=0.5)
plt.title("Stemming vs Lemmatization Comparison")
plt.legend()
plt.show()